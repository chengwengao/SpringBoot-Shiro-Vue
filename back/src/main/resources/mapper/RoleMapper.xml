<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.heeexy.example.dao.RoleDao">

    <select id="getAllRoles" resultType="com.alibaba.fastjson.JSONObject">
        SELECT
        id        roleId,
        role_name roleName,
        create_time createTime,
        update_time updateTime,
        status,
        del_flag delFlag
        FROM sys_role
                WHERE del_flag='0'
    </select>

    <resultMap id="roleMap" type="com.heeexy.example.util.model.One2Many">
        <id column="roleId" property="roleId"/>
        <result column="roleName" property="roleName"/>
        <result column="createTime" property="createTime"/>
        <result column="updateTime" property="updateTime"/>
        <result column="status" property="status"/>
        <result column="del_flag" property="delFlag"/>
        <collection property="users" ofType="com.alibaba.fastjson.JSONObject">
            <id column="userId" property="userId"/>
            <result column="nickname" property="nickname"/>
        </collection>
        <collection property="menus" ofType="com.heeexy.example.util.model.One2Many">
            <id column="menuCode" property="menuCode"/>
            <result column="menuName" property="menuName"/>
            <collection property="permissions" ofType="com.alibaba.fastjson.JSONObject">
                <id column="permissionId" property="permissionId"/>
                <result column="permissionName" property="permissionName"/>
            </collection>
        </collection>
    </resultMap>
    <select id="listRole" resultMap="roleMap">
        SELECT
        r.id              roleId,
        r.role_name       roleName,
        DATE_FORMAT(r.create_time, '%Y.%m.%d %T')     createTime,
        DATE_FORMAT(r.update_time, '%Y.%m.%d %T')     updateTime,
        r.status    ,
        r.del_flag        delFlag
        u.id              userId,
        u.nickname        nickname,
        p.id              permissionId,
        p.menu_code       menuCode,
        p.menu_name       menuName,
        p.permission_name permissionName
        FROM sys_role r
        LEFT JOIN sys_user u ON r.id = u.role_id AND u.status = '1'
        LEFT JOIN sys_role_permission rp ON r.id = rp.role_id AND rp.status = '1'
        LEFT JOIN sys_permission p ON rp.permission_id = p.id
        --         WHERE r.status = '1'
        ORDER BY r.id, p.id
    </select>
    <resultMap id="permissionMap" type="com.heeexy.example.util.model.One2Many">
        <id column="menuName" property="menuName"/>
        <collection property="permissions" ofType="com.alibaba.fastjson.JSONObject">
            <id column="id" property="id"/>
            <result column="permissionName" property="permissionName"/>
            <result column="requiredPerm" property="requiredPerm" javaType="Integer"/>
        </collection>
    </resultMap>
    <select id="listAllPermission" resultMap="permissionMap">
        SELECT
        p.id                  id,
        p.menu_name           menuName,
        p.permission_name     permissionName,
        p.required_permission requiredPerm
        FROM sys_permission p;
    </select>

    <insert id="insertRole" useGeneratedKeys="true" keyProperty="roleId">
        INSERT INTO sys_role
        (role_name, create_time, update_time, status, del_flag)
        VALUES (#{roleName}, SYSDATE(), SYSDATE(), #{status}, #{delFlag})
    </insert>

    <insert id="insertRolePermission">
        insert into sys_role_permission (role_id, permission_id)
        values
        <foreach collection="permissions" item="item" index="index" separator=",">
            (#{roleId}, #{item})
        </foreach>
    </insert>

    <resultMap id="aRole" type="com.heeexy.example.util.model.One2Many">
        <id column="roleId" property="roleId"/>
        <result column="roleName" property="roleName"/>
        <collection property="users" ofType="com.alibaba.fastjson.JSONObject">
            <id column="userId" property="userId"/>
        </collection>
        <collection property="permissionIds" ofType="Integer">
            <id column="permissionId" property="permissionId"/>
        </collection>
    </resultMap>
    <select id="getRoleAllInfo" resultMap="aRole">
        SELECT
        r.id        roleId,
        r.role_name roleName,
        u.id        userId,
        p.id        permissionId
        FROM sys_role r
        LEFT JOIN sys_user u ON r.id = u.role_id AND u.status = '1'
        LEFT JOIN sys_role_permission rp ON r.id = rp.role_id AND rp.status = '1'
        LEFT JOIN sys_permission p ON rp.permission_id = p.id
        WHERE r.id = #{roleId}
    </select>

    <update id="removeRole">
        UPDATE sys_role
        SET
        del_flag = #{delFlag}
        WHERE id = #{roleId}
    </update>
    <update id="removeRoleAllPermission">
        UPDATE sys_role_permission
        SET
        status = '2'
        WHERE role_id = #{roleId}
    </update>

    <update id="removeOldPermission">
        UPDATE sys_role_permission
        SET
        status = '2'
        WHERE role_id = #{roleId}
        AND permission_id in (
        <foreach collection="permissions" item="item" index="index" separator=",">
            #{item}
        </foreach>
        )
    </update>
    <update id="updateRole">
        UPDATE sys_role
        SET
        role_name = #{roleName},
        status = #{status}
        WHERE id = #{roleId}
    </update>
    <select id="queryExistUsername" resultType="int">
        select count(0)
        from sys_user
        WHERE username=#{username}
        AND status='1';
    </select>
</mapper>